{"ast":null,"code":"var _jsxFileName = \"/Users/andreybyrsa/WebstormProjects/react-baccarat/src/components/Models/Ethereum.js\",\n  _s = $RefreshSig$();\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Model(props) {\n  _s();\n  const group = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF('/Ethereum/Ethereum.gltf');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Ethereum\",\n        geometry: nodes.Ethereum.geometry,\n        material: materials['Material.005'],\n        position: [0, 1.21, 0],\n        scale: [0.51, 0.01, 0.51],\n        \"material-color\": \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Model, \"sGjd4dO4Tp4RBMr9xjC42yCxxlY=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nuseGLTF.preload('/Ethereum/Ethereum.gltf');\nvar _c;\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"names":["React","useRef","useGLTF","Model","props","group","nodes","materials","Ethereum","geometry","preload"],"sources":["/Users/andreybyrsa/WebstormProjects/react-baccarat/src/components/Models/Ethereum.js"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/Ethereum/Ethereum.gltf')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group name=\"Scene\">\n        <mesh name=\"Ethereum\" geometry={nodes.Ethereum.geometry} material={materials['Material.005']} position={[0, 1.21, 0]} scale={[0.51, 0.01, 0.51]} material-color=\"white\" />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/Ethereum/Ethereum.gltf')\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,mBAAmB;AAAA;AAE3C,OAAO,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EAC3B,MAAMC,KAAK,GAAGJ,MAAM,EAAE;EACtB,MAAM;IAAEK,KAAK;IAAEC;EAAU,CAAC,GAAGL,OAAO,CAAC,yBAAyB,CAAC;EAC/D,oBACE;IAAO,GAAG,EAAEG,KAAM;IAAA,GAAKD,KAAK;IAAE,OAAO,EAAE,IAAK;IAAA,uBAC1C;MAAO,IAAI,EAAC,OAAO;MAAA,uBACjB;QAAM,IAAI,EAAC,UAAU;QAAC,QAAQ,EAAEE,KAAK,CAACE,QAAQ,CAACC,QAAS;QAAC,QAAQ,EAAEF,SAAS,CAAC,cAAc,CAAE;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAE;QAAC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;QAAC,kBAAe;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACpK;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GAVeJ,KAAK;EAAA,QAEUD,OAAO;AAAA;AAAA,KAFtBC,KAAK;AAYrBD,OAAO,CAACQ,OAAO,CAAC,yBAAyB,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}