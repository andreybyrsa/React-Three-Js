{"ast":null,"code":"var _jsxFileName = \"/Users/andreybyrsa/WebstormProjects/react-baccarat/src/components/Models/Ethereum.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useFrame } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Ethereum(props) {\n  _s();\n  const group = useRef();\n  const {\n    nodes\n  } = useGLTF('/Ethereum/Ethereum.gltf');\n\n  // useFrame(() => {\n  //   group.current.rotation.y += 0.02;\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"Ethereum\",\n        geometry: nodes.Ethereum.geometry,\n        position: [-1, 0, 0],\n        scale: [0.51, 0.01, 0.51],\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Ethereum, \"ckN86J9BdpC0f6WHD8YHFLEj49A=\", false, function () {\n  return [useGLTF];\n});\n_c = Ethereum;\nuseGLTF.preload('/Ethereum/Ethereum.gltf');\nvar _c;\n$RefreshReg$(_c, \"Ethereum\");","map":{"version":3,"names":["React","useRef","useGLTF","useFrame","Ethereum","props","group","nodes","geometry","preload"],"sources":["/Users/andreybyrsa/WebstormProjects/react-baccarat/src/components/Models/Ethereum.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useFrame } from \"@react-three/fiber\";\n\nexport function Ethereum(props) {\n  const group = useRef();\n  const { nodes } = useGLTF('/Ethereum/Ethereum.gltf');\n\n  // useFrame(() => {\n  //   group.current.rotation.y += 0.02;\n  // }, []);\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group name=\"Scene\">\n        <mesh name=\"Ethereum\" geometry={nodes.Ethereum.geometry} position={[-1, 0, 0]} scale={[0.51, 0.01, 0.51]}>\n          <meshStandardMaterial color=\"white\"/>\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/Ethereum/Ethereum.gltf');\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAAC;AAE9C,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAC9B,MAAMC,KAAK,GAAGL,MAAM,EAAE;EACtB,MAAM;IAAEM;EAAM,CAAC,GAAGL,OAAO,CAAC,yBAAyB,CAAC;;EAEpD;EACA;EACA;;EAEA,oBACE;IAAO,GAAG,EAAEI,KAAM;IAAA,GAAKD,KAAK;IAAE,OAAO,EAAE,IAAK;IAAA,uBAC1C;MAAO,IAAI,EAAC,OAAO;MAAA,uBACjB;QAAM,IAAI,EAAC,UAAU;QAAC,QAAQ,EAAEE,KAAK,CAACH,QAAQ,CAACI,QAAS;QAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAAC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;QAAA,uBACvG;UAAsB,KAAK,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ;AAAC,GAjBeJ,QAAQ;EAAA,QAEJF,OAAO;AAAA;AAAA,KAFXE,QAAQ;AAmBxBF,OAAO,CAACO,OAAO,CAAC,yBAAyB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}